name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Push events to tags starting with v (v0.0.1, v1.0.0, etc)
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          
      - name: Build macOS package
        run: |
          python pyinstaller_build.py
          
      - name: Create DMG installer
        run: |
          hdiutil create -volname "UCI-ClusterManager" -srcfolder "dist/UCI-ClusterManager.app" -ov -format UDZO "dist/UCI-ClusterManager-${{ github.ref_name }}-macos.dmg"
          
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-artifacts
          path: |
            dist/UCI-ClusterManager-*.dmg
            dist/UCI-ClusterManager.app

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          
      - name: Build Windows package
        run: |
          python pyinstaller_build.py
          
      - name: Create Windows installer
        run: |
          python create_installer.py
          
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifacts
          path: dist/UCI-ClusterManager-*.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev libgl1-mesa-dev fakeroot
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          
      - name: Build Linux package
        run: |
          python pyinstaller_build.py
          
      - name: Create Debian package
        run: |
          mkdir -p dist/deb-package/DEBIAN
          mkdir -p dist/deb-package/usr/local/bin
          mkdir -p dist/deb-package/usr/share/applications
          mkdir -p dist/deb-package/usr/share/icons/hicolor/256x256/apps
          
          # Copy executable files
          cp -r dist/UCI-ClusterManager/* dist/deb-package/usr/local/bin/
          
          # Create desktop file
          echo "[Desktop Entry]
          Name=UCI-ClusterManager
          Comment=A graphical tool for managing UCI HPC cluster resources
          Exec=/usr/local/bin/UCI-ClusterManager
          Icon=/usr/share/icons/hicolor/256x256/apps/uci-clustermanager.png
          Terminal=false
          Type=Application
          Categories=Utility;Science;" > dist/deb-package/usr/share/applications/uci-clustermanager.desktop
          
          # Copy icon
          cp my_hpc_app/resources/icon.png dist/deb-package/usr/share/icons/hicolor/256x256/apps/uci-clustermanager.png
          
          # Create control file
          VERSION=$(echo ${{ github.ref_name }} | sed 's/v//')
          echo "Package: uci-clustermanager
          Version: ${VERSION:-0.0.1}
          Section: utils
          Priority: optional
          Architecture: amd64
          Depends: libc6, libgl1
          Maintainer: Song Liangyu
          Description: UCI-ClusterManager
           A graphical tool for managing UCI HPC cluster resources
           including job management, node status, and VSCode integration." > dist/deb-package/DEBIAN/control
          
          # Build deb package
          fakeroot dpkg-deb --build dist/deb-package dist/uci-clustermanager_${VERSION:-0.0.1}_amd64.deb
          
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifacts
          path: dist/uci-clustermanager_*.deb

  create-release:
    needs: [build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: UCI-ClusterManager ${{ github.ref_name }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
          files: |
            artifacts/macos-artifacts/UCI-ClusterManager-*.dmg
            artifacts/windows-artifacts/UCI-ClusterManager-*.exe
            artifacts/linux-artifacts/uci-clustermanager_*.deb
            LICENSE
            NOTICE.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 